name: Monitor External Repository

on:
  schedule:
    - cron: '0 * * * *'  # Check every hour at minute 0
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update regardless of timing'
        required: false
        default: false
        type: boolean

jobs:
  check-pkmn-randbats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Check pkmn/randbats vendor directory for recent changes
        id: check-changes
        run: |
          # Check if this is a manual force update
          if [ "${{ github.event.inputs.force_update }}" = "true" ]; then
            echo "Force update requested - triggering update regardless of timing"
            
            # Trigger the main workflow using PAT
            curl -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.REPO_DISPATCH_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/dispatches \
              -d '{"event_type":"data_update_triggered"}'
            
            echo "Triggered data_update_triggered event (force update)"
            exit 0
          fi
          
          # Get the latest commit that modified the vendor directory
          LATEST_VENDOR_COMMIT=$(curl -s "https://api.github.com/repos/pkmn/randbats/commits?path=vendor&per_page=1" | jq -r '.[0].sha')
          
          if [ "$LATEST_VENDOR_COMMIT" = "null" ] || [ -z "$LATEST_VENDOR_COMMIT" ]; then
            echo "No commits found for vendor directory"
            exit 0
          fi
          
          # Get the commit details including timestamp
          COMMIT_DETAILS=$(curl -s "https://api.github.com/repos/pkmn/randbats/commits/$LATEST_VENDOR_COMMIT")
          COMMIT_DATE=$(echo "$COMMIT_DETAILS" | jq -r '.commit.committer.date')
          COMMIT_SHA=$(echo "$COMMIT_DETAILS" | jq -r '.sha')
          
          echo "Latest vendor commit: $COMMIT_SHA"
          echo "Commit date: $COMMIT_DATE"
          
          # Convert commit date to Unix timestamp
          COMMIT_TIMESTAMP=$(date -d "$COMMIT_DATE" +%s)
          CURRENT_TIMESTAMP=$(date +%s)
          
          # Calculate time difference in hours
          TIME_DIFF_HOURS=$(( (CURRENT_TIMESTAMP - COMMIT_TIMESTAMP) / 3600 ))
          
          echo "Time difference: $TIME_DIFF_HOURS hours"
          
          # Check if we've already processed this commit
          TRACKING_FILE=".last_processed_commit"
          if [ -f "$TRACKING_FILE" ]; then
            LAST_PROCESSED=$(cat "$TRACKING_FILE")
            if [ "$LAST_PROCESSED" = "$COMMIT_SHA" ]; then
              echo "Commit $COMMIT_SHA has already been processed, skipping"
              exit 0
            fi
          fi
          
          # Check if the commit is within the last 24 hours
          if [ $TIME_DIFF_HOURS -lt 24 ]; then
            echo "Recent changes detected in pkmn/randbats vendor directory (within last 24 hours)"
            echo "Commit SHA: $COMMIT_SHA"
            echo "Commit date: $COMMIT_DATE"
            
            # Trigger the main workflow using PAT
            curl -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.REPO_DISPATCH_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/dispatches \
              -d '{"event_type":"data_update_triggered"}'
            
            echo "Triggered data_update_triggered event"
            
            # Record this commit as processed
            echo "$COMMIT_SHA" > "$TRACKING_FILE"
            echo "Recorded commit $COMMIT_SHA as processed"
          else
            echo "No recent changes detected in pkmn/randbats vendor directory"
            echo "Last change was $TIME_DIFF_HOURS hours ago"
          fi 