name: Update Data and Publish to PyPI

on:
  schedule:
    - cron: '0 3 * * *'  # every day at 03:00 UTC
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update even if no changes detected'
        required: false
        default: false
        type: boolean
  repository_dispatch:
    types: [data_update_triggered]
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

jobs:
  update-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests build twine

      - name: Log trigger reason
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "Workflow triggered by external repository changes"
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Workflow triggered manually"
          elif [ "${{ github.event_name }}" = "schedule" ]; then
            echo "Workflow triggered by daily schedule"
          elif [ "${{ github.event_name }}" = "push" ]; then
            echo "Workflow triggered by version tag push"
          fi

      - name: Run data update script
        run: |
          python scripts/update_all_data.py

      - name: Check for data changes
        id: check-changes
        run: |
          echo "Checking for changes in data directories..."
          git add localsets/randbattle_data/*.json localsets/metadata/*.json localsets/smogon_data/*.json || true
          if ! git diff --cached --quiet; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in data files"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in data files"
          fi

      - name: Commit and push if data changed
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -m 'chore: update data files [auto]'
          git push
          echo "Data files updated and committed"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: No changes message
        if: steps.check-changes.outputs.has_changes == 'false'
        run: |
          echo "No data changes detected - skipping commit"

      - name: Build package
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          python -m build

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
        